services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: paymentapi-db
    environment:
      POSTGRES_DB: paymentapi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d paymentapi"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paymentapi-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: paymentapi-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paymentapi-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: paymentapi-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paymentapi-network

  # .NET Application
  paymentapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: paymentapi-app
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=paymentapi;Username=postgres;Password=postgres
      - RedisSettings__ConnectionString=redis:6379
      - RabbitMQSettings__HostName=rabbitmq
      - RabbitMQSettings__Port=5672
      - RabbitMQSettings__UserName=guest
      - RabbitMQSettings__Password=guest
      - PaymentSettings__BaseUrl=http://localhost:8080
      # Pyroscope environment variables for .NET profiling
      - PYROSCOPE_APPLICATION_NAME=paymentapi
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040
      - PYROSCOPE_ENV=docker
      - PYROSCOPE_PROFILING_ENABLED=1
      - PYROSCOPE_LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - paymentapi-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: paymentapi-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - paymentapi
    networks:
      - paymentapi-network

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: paymentapi-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - paymentapi-network

  # Loki - Log Aggregation
  loki:
    image: grafana/loki:latest
    container_name: paymentapi-loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - paymentapi-network

  # Tempo init container to fix permissions
  tempo-init:
    image: busybox:latest
    container_name: paymentapi-tempo-init
    volumes:
      - tempo_data:/tmp/tempo
    command: 
      - sh
      - -c
      - |
        mkdir -p /tmp/tempo/wal /tmp/tempo/blocks
        chmod -R 777 /tmp/tempo
    networks:
      - paymentapi-network

  # Tempo - Distributed Tracing
  tempo:
    image: grafana/tempo:latest
    container_name: paymentapi-tempo
    ports:
      - "3200:3200"
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
      - "9411:9411"  # Zipkin
      - "14268:14268"  # Jaeger
    volumes:
      - ./monitoring/tempo.yml:/etc/tempo.yml:ro
      - tempo_data:/tmp/tempo
    command: 
      - -config.file=/etc/tempo.yml
      - -server.http-listen-port=3200
      - -target=all
    depends_on:
      - tempo-init
    networks:
      - paymentapi-network

  # Promtail - Log Shipping
  promtail:
    image: grafana/promtail:latest
    container_name: paymentapi-promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - paymentapi-network

  # Grafana - Unified Observability Dashboard
  grafana:
    image: grafana/grafana-oss:latest
    container_name: paymentapi-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_FEATURE_TOGGLES_ENABLE=tempoSearch,traceqlEditor
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-pyroscope-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - ./monitoring/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./monitoring/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
      - loki
      - tempo
      - pyroscope
    networks:
      - paymentapi-network

  # Pyroscope - Continuous Profiling
  pyroscope:
    image: grafana/pyroscope:latest
    container_name: paymentapi-pyroscope
    ports:
      - "4040:4040"
    environment:
      - PYROSCOPE_CONFIG_FILE=/etc/pyroscope/config.yml
    volumes:
      - pyroscope_data:/var/lib/pyroscope
      - ./monitoring/pyroscope-config.yml:/etc/pyroscope/config.yml:ro
    command:
      - server
    networks:
      - paymentapi-network

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local
  rabbitmqdata:
    driver: local
  prom_data:
    driver: local
  loki_data:
    driver: local
  tempo_data:
    driver: local
  grafana_data:
    driver: local
  pyroscope_data:
    driver: local

networks:
  paymentapi-network:
    driver: bridge